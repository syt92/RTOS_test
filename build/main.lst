ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Error_Handler:
  26              	.LFB132:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * <h2><center>&copy; Copyright (c) 2021 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.</center></h2>
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/main.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/main.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/main.c ****   *                             www.st.com/SLA0044
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include "i2c.h"
  23:Core/Src/main.c **** #include "i2s.h"
  24:Core/Src/main.c **** #include "spi.h"
  25:Core/Src/main.c **** #include "usart.h"
  26:Core/Src/main.c **** #include "usb_host.h"
  27:Core/Src/main.c **** #include "gpio.h"
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** #include "string.h"
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 2


  32:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** void MX_USB_HOST_Process(void);
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Configure the system clock */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 3


  89:Core/Src/main.c ****   SystemClock_Config();
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  97:Core/Src/main.c ****   MX_I2C1_Init();
  98:Core/Src/main.c ****   MX_I2S3_Init();
  99:Core/Src/main.c ****   MX_SPI1_Init();
 100:Core/Src/main.c ****   MX_USART2_UART_Init();
 101:Core/Src/main.c ****   MX_USB_HOST_Init();
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE END 2 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* Infinite loop */
 107:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 108:Core/Src/main.c ****   while (1)
 109:Core/Src/main.c ****   {
 110:Core/Src/main.c ****     /* USER CODE END WHILE */
 111:Core/Src/main.c ****     MX_USB_HOST_Process();
 112:Core/Src/main.c ****     char *ch = "HelloWorld\r\n";
 113:Core/Src/main.c ****     HAL_UART_Transmit(&huart2, (uint8_t *)ch, strlen(ch), 0xffff);
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****   }
 116:Core/Src/main.c ****   /* USER CODE END 3 */
 117:Core/Src/main.c **** }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /**
 120:Core/Src/main.c ****   * @brief System Clock Configuration
 121:Core/Src/main.c ****   * @retval None
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c **** void SystemClock_Config(void)
 124:Core/Src/main.c **** {
 125:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 126:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 127:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 130:Core/Src/main.c ****   */
 131:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 132:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 133:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 134:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 137:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 145:Core/Src/main.c ****   {
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 4


 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2S;
 162:Core/Src/main.c ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 163:Core/Src/main.c ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 164:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** }
 169:Core/Src/main.c **** 
 170:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /* USER CODE END 4 */
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** void Error_Handler(void)
 179:Core/Src/main.c **** {
  28              		.loc 1 179 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LBB4:
  35              	.LBB5:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 5


  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 6


  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 7


 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  37              		.loc 2 142 0
  38              		.syntax unified
  39              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  40 0000 72B6     		cpsid i
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L2:
  45 0002 FEE7     		b	.L2
  46              	.LBE5:
  47              	.LBE4:
  48              		.cfi_endproc
  49              	.LFE132:
  51              		.section	.text.SystemClock_Config,"ax",%progbits
  52              		.align	1
  53              		.global	SystemClock_Config
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  57              		.fpu fpv4-sp-d16
  59              	SystemClock_Config:
  60              	.LFB131:
 124:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  61              		.loc 1 124 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 96
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 00B5     		push	{lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 14, -4
  69 0002 99B0     		sub	sp, sp, #100
  70              	.LCFI1:
  71              		.cfi_def_cfa_offset 104
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  72              		.loc 1 125 0
  73 0004 3022     		movs	r2, #48
  74 0006 0021     		movs	r1, #0
  75 0008 0DEB0200 		add	r0, sp, r2
  76 000c FFF7FEFF 		bl	memset
  77              	.LVL0:
 126:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
  78              		.loc 1 126 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 8


  79 0010 0023     		movs	r3, #0
  80 0012 0793     		str	r3, [sp, #28]
  81 0014 0893     		str	r3, [sp, #32]
  82 0016 0993     		str	r3, [sp, #36]
  83 0018 0A93     		str	r3, [sp, #40]
  84 001a 0B93     		str	r3, [sp, #44]
 127:Core/Src/main.c **** 
  85              		.loc 1 127 0
  86 001c 0393     		str	r3, [sp, #12]
  87 001e 0493     		str	r3, [sp, #16]
  88 0020 0593     		str	r3, [sp, #20]
  89 0022 0693     		str	r3, [sp, #24]
  90              	.LBB6:
 131:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
  91              		.loc 1 131 0
  92 0024 0193     		str	r3, [sp, #4]
  93 0026 274A     		ldr	r2, .L11
  94 0028 116C     		ldr	r1, [r2, #64]
  95 002a 41F08051 		orr	r1, r1, #268435456
  96 002e 1164     		str	r1, [r2, #64]
  97 0030 126C     		ldr	r2, [r2, #64]
  98 0032 02F08052 		and	r2, r2, #268435456
  99 0036 0192     		str	r2, [sp, #4]
 100 0038 019A     		ldr	r2, [sp, #4]
 101              	.LBE6:
 102              	.LBB7:
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 103              		.loc 1 132 0
 104 003a 0293     		str	r3, [sp, #8]
 105 003c 224B     		ldr	r3, .L11+4
 106 003e 1A68     		ldr	r2, [r3]
 107 0040 42F48042 		orr	r2, r2, #16384
 108 0044 1A60     		str	r2, [r3]
 109 0046 1B68     		ldr	r3, [r3]
 110 0048 03F48043 		and	r3, r3, #16384
 111 004c 0293     		str	r3, [sp, #8]
 112 004e 029B     		ldr	r3, [sp, #8]
 113              	.LBE7:
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 114              		.loc 1 136 0
 115 0050 0123     		movs	r3, #1
 116 0052 0C93     		str	r3, [sp, #48]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 117              		.loc 1 137 0
 118 0054 4FF48033 		mov	r3, #65536
 119 0058 0D93     		str	r3, [sp, #52]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 120              		.loc 1 138 0
 121 005a 0223     		movs	r3, #2
 122 005c 1293     		str	r3, [sp, #72]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 123              		.loc 1 139 0
 124 005e 4FF48002 		mov	r2, #4194304
 125 0062 1392     		str	r2, [sp, #76]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 126              		.loc 1 140 0
 127 0064 0822     		movs	r2, #8
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 9


 128 0066 1492     		str	r2, [sp, #80]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 129              		.loc 1 141 0
 130 0068 4FF4A872 		mov	r2, #336
 131 006c 1592     		str	r2, [sp, #84]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 132              		.loc 1 142 0
 133 006e 1693     		str	r3, [sp, #88]
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 134              		.loc 1 143 0
 135 0070 0723     		movs	r3, #7
 136 0072 1793     		str	r3, [sp, #92]
 144:Core/Src/main.c ****   {
 137              		.loc 1 144 0
 138 0074 0CA8     		add	r0, sp, #48
 139 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 140              	.LVL1:
 141 007a E8B9     		cbnz	r0, .L8
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 142              		.loc 1 150 0
 143 007c 0F23     		movs	r3, #15
 144 007e 0793     		str	r3, [sp, #28]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 145              		.loc 1 152 0
 146 0080 0223     		movs	r3, #2
 147 0082 0893     		str	r3, [sp, #32]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 148              		.loc 1 153 0
 149 0084 0023     		movs	r3, #0
 150 0086 0993     		str	r3, [sp, #36]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 151              		.loc 1 154 0
 152 0088 4FF4A053 		mov	r3, #5120
 153 008c 0A93     		str	r3, [sp, #40]
 155:Core/Src/main.c **** 
 154              		.loc 1 155 0
 155 008e 4FF48053 		mov	r3, #4096
 156 0092 0B93     		str	r3, [sp, #44]
 157:Core/Src/main.c ****   {
 157              		.loc 1 157 0
 158 0094 0521     		movs	r1, #5
 159 0096 07A8     		add	r0, sp, #28
 160 0098 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 161              	.LVL2:
 162 009c 70B9     		cbnz	r0, .L9
 161:Core/Src/main.c ****   PeriphClkInitStruct.PLLI2S.PLLI2SN = 192;
 163              		.loc 1 161 0
 164 009e 0123     		movs	r3, #1
 165 00a0 0393     		str	r3, [sp, #12]
 162:Core/Src/main.c ****   PeriphClkInitStruct.PLLI2S.PLLI2SR = 2;
 166              		.loc 1 162 0
 167 00a2 C023     		movs	r3, #192
 168 00a4 0493     		str	r3, [sp, #16]
 163:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 169              		.loc 1 163 0
 170 00a6 0223     		movs	r3, #2
 171 00a8 0593     		str	r3, [sp, #20]
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 10


 164:Core/Src/main.c ****   {
 172              		.loc 1 164 0
 173 00aa 03A8     		add	r0, sp, #12
 174 00ac FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 175              	.LVL3:
 176 00b0 30B9     		cbnz	r0, .L10
 168:Core/Src/main.c **** 
 177              		.loc 1 168 0
 178 00b2 19B0     		add	sp, sp, #100
 179              	.LCFI2:
 180              		.cfi_remember_state
 181              		.cfi_def_cfa_offset 4
 182              		@ sp needed
 183 00b4 5DF804FB 		ldr	pc, [sp], #4
 184              	.L8:
 185              	.LCFI3:
 186              		.cfi_restore_state
 146:Core/Src/main.c ****   }
 187              		.loc 1 146 0
 188 00b8 FFF7FEFF 		bl	Error_Handler
 189              	.LVL4:
 190              	.L9:
 159:Core/Src/main.c ****   }
 191              		.loc 1 159 0
 192 00bc FFF7FEFF 		bl	Error_Handler
 193              	.LVL5:
 194              	.L10:
 166:Core/Src/main.c ****   }
 195              		.loc 1 166 0
 196 00c0 FFF7FEFF 		bl	Error_Handler
 197              	.LVL6:
 198              	.L12:
 199              		.align	2
 200              	.L11:
 201 00c4 00380240 		.word	1073887232
 202 00c8 00700040 		.word	1073770496
 203              		.cfi_endproc
 204              	.LFE131:
 206              		.section	.text.main,"ax",%progbits
 207              		.align	1
 208              		.global	main
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 212              		.fpu fpv4-sp-d16
 214              	main:
 215              	.LFB130:
  74:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 216              		.loc 1 74 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220 0000 08B5     		push	{r3, lr}
 221              	.LCFI4:
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 11


  82:Core/Src/main.c **** 
 225              		.loc 1 82 0
 226 0002 FFF7FEFF 		bl	HAL_Init
 227              	.LVL7:
  89:Core/Src/main.c **** 
 228              		.loc 1 89 0
 229 0006 FFF7FEFF 		bl	SystemClock_Config
 230              	.LVL8:
  96:Core/Src/main.c ****   MX_I2C1_Init();
 231              		.loc 1 96 0
 232 000a FFF7FEFF 		bl	MX_GPIO_Init
 233              	.LVL9:
  97:Core/Src/main.c ****   MX_I2S3_Init();
 234              		.loc 1 97 0
 235 000e FFF7FEFF 		bl	MX_I2C1_Init
 236              	.LVL10:
  98:Core/Src/main.c ****   MX_SPI1_Init();
 237              		.loc 1 98 0
 238 0012 FFF7FEFF 		bl	MX_I2S3_Init
 239              	.LVL11:
  99:Core/Src/main.c ****   MX_USART2_UART_Init();
 240              		.loc 1 99 0
 241 0016 FFF7FEFF 		bl	MX_SPI1_Init
 242              	.LVL12:
 100:Core/Src/main.c ****   MX_USB_HOST_Init();
 243              		.loc 1 100 0
 244 001a FFF7FEFF 		bl	MX_USART2_UART_Init
 245              	.LVL13:
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 246              		.loc 1 101 0
 247 001e FFF7FEFF 		bl	MX_USB_HOST_Init
 248              	.LVL14:
 249              	.L14:
 250              	.LBB8:
 111:Core/Src/main.c ****     char *ch = "HelloWorld\r\n";
 251              		.loc 1 111 0 discriminator 1
 252 0022 FFF7FEFF 		bl	MX_USB_HOST_Process
 253              	.LVL15:
 113:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 254              		.loc 1 113 0 discriminator 1
 255 0026 4FF6FF73 		movw	r3, #65535
 256 002a 0C22     		movs	r2, #12
 257 002c 0249     		ldr	r1, .L16
 258 002e 0348     		ldr	r0, .L16+4
 259 0030 FFF7FEFF 		bl	HAL_UART_Transmit
 260              	.LVL16:
 261 0034 F5E7     		b	.L14
 262              	.L17:
 263 0036 00BF     		.align	2
 264              	.L16:
 265 0038 00000000 		.word	.LC0
 266 003c 00000000 		.word	huart2
 267              	.LBE8:
 268              		.cfi_endproc
 269              	.LFE130:
 271              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 272              		.align	2
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 12


 273              	.LC0:
 274 0000 48656C6C 		.ascii	"HelloWorld\015\012\000"
 274      6F576F72 
 274      6C640D0A 
 274      00
 275              		.text
 276              	.Letext0:
 277              		.file 3 "d:\\stm32_project\\tool\\7-2018-q2-update\\arm-none-eabi\\include\\machine\\_default_type
 278              		.file 4 "d:\\stm32_project\\tool\\7-2018-q2-update\\arm-none-eabi\\include\\sys\\_stdint.h"
 279              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 280              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 281              		.file 7 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 282              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 283              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 284              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 285              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 286              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 287              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 288              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 289              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 290              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 291              		.file 17 "Core/Inc/i2c.h"
 292              		.file 18 "Core/Inc/i2s.h"
 293              		.file 19 "Core/Inc/spi.h"
 294              		.file 20 "Core/Inc/usart.h"
 295              		.file 21 "d:\\stm32_project\\tool\\7-2018-q2-update\\arm-none-eabi\\include\\sys\\lock.h"
 296              		.file 22 "d:\\stm32_project\\tool\\7-2018-q2-update\\arm-none-eabi\\include\\sys\\_types.h"
 297              		.file 23 "d:\\stm32_project\\tool\\7-2018-q2-update\\lib\\gcc\\arm-none-eabi\\7.3.1\\include\\stdd
 298              		.file 24 "d:\\stm32_project\\tool\\7-2018-q2-update\\arm-none-eabi\\include\\sys\\reent.h"
 299              		.file 25 "Core/Inc/gpio.h"
 300              		.file 26 "USB_HOST/App/usb_host.h"
 301              		.file 27 "<built-in>"
ARM GAS  C:\Users\User\AppData\Local\Temp\cc40U1aa.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:18     .text.Error_Handler:00000000 $t
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:25     .text.Error_Handler:00000000 Error_Handler
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:52     .text.SystemClock_Config:00000000 $t
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:59     .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:201    .text.SystemClock_Config:000000c4 $d
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:207    .text.main:00000000 $t
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:214    .text.main:00000000 main
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:265    .text.main:00000038 $d
C:\Users\User\AppData\Local\Temp\cc40U1aa.s:272    .rodata.main.str1.4:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_I2C1_Init
MX_I2S3_Init
MX_SPI1_Init
MX_USART2_UART_Init
MX_USB_HOST_Init
MX_USB_HOST_Process
HAL_UART_Transmit
huart2
